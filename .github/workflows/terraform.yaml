
name: CI-CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  CI:
    name: 'Continuous Integration'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    defaults:
      run:
        shell: bash

    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        - name: Terraform Init
          run: terraform init
        - name: Terraform Plan
          run: terraform plan -input=false

  tfsec:
    name: 'Tfsec - Security Scan'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true

  CD:
    name: 'Continuous Deployment'
    needs: [tfsec, CI]
    runs-on: ubuntu-latest
    if: ${{ needs.tfsec.result == 'success' }}
    
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    defaults:
      run:
        shell: bash

    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        - name: Terraform Init
          run: terraform init
        - name: Terraform Plan
          run: terraform plan -input=false
    # Apply Terraform changes
        - name: Terraform Apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve -input=false


